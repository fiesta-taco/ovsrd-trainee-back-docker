version: 0.2
phases:
  pre_build:
    commands:
      - REPO_URL="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO" 
      - LOG_REPO="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - echo $LOG_REPO
      - echo $REPO_URL
      - echo $DEV_ENV
      - echo $AWS_REGION
      - echo $REPO
      - echo $CODEBUILD_BUILD_ID
      - TAG=$(echo $CODEBUILD_BUILD_ID | rev | cut -c 1-4 | rev)
      - echo $TAG
      - echo $AWS_ACCOUNT_ID
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  build:
    commands:
      - docker build -t $REPO_URL:latest . #DEV_ENV main or dev
      - docker tag $REPO_URL:latest $REPO_URL:$TAG 
      - docker images -a 
      - docker push $REPO_URL:$TAG | docker push $REPO_URL:latest


      # - OLD_IMAGE=$(aws ecr describe-images --repository-name $REPO --query 'sort_by(imageDetails,& imagePushedAt)[-1]' --output json | jq -r '.imageDigest')
      # - echo $OLD_IMAGE
      # - if [ -n "$OLD_IMAGE" ]; then aws ecr batch-delete-image --repository-name $REPO --image-ids imageDigest=$OLD_IMAGE; fi

      




      